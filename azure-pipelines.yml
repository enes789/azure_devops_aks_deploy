trigger:
- main

resources:
- repo: self

variables:
  # - group: acr
  imageRepo: azure_devops_aks_deploy
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: mylocal
      #vmImage: ubuntu-latest
    steps:
    # - script: docker build -t azurehandson.azurecr.io/azure_devops_aks_deploy:$(Build.BuildId) .
    #   displayName: Build an image
    # - script: docker login azurehandson.azurecr.io -u $(ACR_USER) -p $(ACR_PASSWORD)
    #   displayName: acr login 
    # - script: docker push azurehandson.azurecr.io/azure_devops_aks_deploy:$(Build.BuildId)
    #   displayName: Push image  
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'azurehandson-acr'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: 'azurehandson-acr'
        repository: '$(imageRepo)'
        command: 'push'
        tags: |
          $(tag)    

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build 
  variables:
    acrsecret: acrauth 
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:  
      name: mylocal
      #vmImage: ubuntu-latest
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'azure-devops-aks'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'azurehandson-acr'
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'azure-devops-aks'
          namespace: 'default'
          manifests: |
            '$(Pipeline.Workspace)/manifests/deployment.yml'
            '$(Pipeline.Workspace)/manifests/service.yml'
